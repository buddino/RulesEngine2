package rules;

import io.swagger.client.model.ResourceDataDTO;
import it.cnit.gaia.rulesengine.model.exceptions.RuleInitializationException;
import it.cnit.gaia.rulesengine.rules.ExploitNaturalLight;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.mockito.MockitoAnnotations;
import org.springframework.util.Assert;

import static org.mockito.Mockito.when;

public class TestExploitNaturaLight extends GenericRuleTest{
	@Rule
	public ExpectedException thrown = ExpectedException.none();

	ExploitNaturalLight rule;


	@Before
	public void setUp() throws RuleInitializationException {
		MockitoAnnotations.initMocks(this);
		rule = new ExploitNaturalLight();
		setUpRule(rule);
	}

	@Test
	public void testValidInit() throws RuleInitializationException {
		rule.luminosity_uri = "luminosity";
		rule.power_uri = "power";
		rule.power_threshold = 0.6E6;
		rule.luminosity_threshold = 500.0;
		Assert.isTrue(rule.init());
	}
	@Test
	public void testNotValidInit1() throws RuleInitializationException {
		thrown.expect(RuleInitializationException.class);
		rule.luminosity_uri = "luminosity";
		rule.power_uri = "power";
		rule.power_threshold = 0.6E6;
		//rule.luminosity_threshold = 500.0;
		rule.init();
	}
	@Test
	public void testNotValidInit2() throws RuleInitializationException {
		thrown.expect(RuleInitializationException.class);
		//rule.luminosity_uri = "luminosity";
		rule.power_uri = "power";
		rule.power_threshold = 0.6E6;
		rule.luminosity_threshold = 500.0;
		rule.init();
	}
	@Test
	public void testNotValidInit3() throws RuleInitializationException {
		thrown.expect(RuleInitializationException.class);
		rule.luminosity_uri = "luminosity";
		//rule.power_uri = "power";
		rule.power_threshold = 0.6E6;
		rule.luminosity_threshold = 500.0;
		rule.init();
	}
	@Test
	public void testNotValidInit4() throws RuleInitializationException {
		thrown.expect(RuleInitializationException.class);
		rule.luminosity_uri = "luminosity";
		rule.power_uri = "power";
		//rule.power_threshold = 0.6E6;
		rule.luminosity_threshold = 500.0;
		rule.init();
	}

	@Test
	public void testOverThreshold() throws RuleInitializationException {
		ResourceDataDTO luminosityDTO = new ResourceDataDTO();
		luminosityDTO.setReading(600.0);
		ResourceDataDTO powerDTO = new ResourceDataDTO();
		powerDTO.setReading(1.0E6);
		when(measurementRepository.getLatestFor("luminosity")).thenReturn(luminosityDTO);
		when(measurementRepository.getLatestFor("power")).thenReturn(powerDTO);
		rule.luminosity_uri = "luminosity";
		rule.power_uri = "power";
		rule.power_threshold = 0.6E6;
		rule.luminosity_threshold = 500.0;
		rule.init();
		Assert.isTrue(rule.condition());
	}
}

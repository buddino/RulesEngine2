package it.cnit.gaia.rulesengine.rules;

import it.cnit.gaia.rulesengine.model.GaiaRule;
import it.cnit.gaia.rulesengine.model.annotation.LoadMe;
import it.cnit.gaia.rulesengine.model.annotation.LogMe;
import it.cnit.gaia.rulesengine.model.annotation.URI;

public class ExploitNaturalLight extends GaiaRule{
	@LogMe
	@LoadMe
	@URI
	public String luminosity_uri;
	@LogMe
	@LoadMe
	@URI
	public String temperature_uri;
	@LogMe
	@LoadMe
	@URI
	public String power_uri;
	@LogMe
	@LoadMe
	public Double luminosity_threshold;
	@LogMe
	@LoadMe
	public Double power_threshold;
	@LogMe
	@LoadMe
	public Double temperature_threshold = Double.POSITIVE_INFINITY;
	@LogMe
	public Double luminosity_value;
	@LogMe
	public Double temperature_value;
	@LogMe
	public Double power_value;

	@Override
	public boolean condition(){
		luminosity_value = measurements.getLatestFor(luminosity_uri).getReading();
		temperature_value = measurements.getLatestFor(temperature_uri).getReading();
		power_value = measurements.getLatestFor(power_uri).getReading();
		return luminosity_value > luminosity_threshold && power_value > power_threshold && temperature_value < temperature_threshold;
	}



}
